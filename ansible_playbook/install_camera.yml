---
# This is a draft of the play used to script an automated Ansible
# deployment of a home security camera with Raspberry Pi 2 Model B / Raspbian Lite
# using the motioneye front-end for the motion daemon.
- name: Install Camera
  hosts: rpi2
  gather_facts: yes
  remote_user: pi
  become: yes
  vars:
    boot_config: {'start_x': '1', 'gpu_mem': '192', 'disable_camera_led': '1'}
  tasks:     
    - name: <1/24> Updating system...
      apt: update_cache=yes
      
    - name: <2/24> Upgrading system...
      apt: upgrade=full
      
    - name: <3/24> Adding boot settings to enable raspberry pi on-board camera module...
      lineinfile: line='{{ item.key }}={{ item.value }}'
        dest=/boot/config.txt
        regexp="^{{ item.key }}="
      with_dict: '{{ boot_config }}'
      register: _boot_config
      
    - name: <4/24> Adding raspberry camera kernel module...
      lineinfile:
        dest: /etc/modules
        regexp: 'bcm2835-v4l2'
        line: 'bcm2835-v4l2'
        state: present
      
    - name: <5/24> Downloading the required dependencies (ffmpeg precompiled)...
      get_url:
        url: https://github.com/ccrisan/motioneye/wiki/precompiled/ffmpeg_3.1.1-1_armhf.deb
        dest: /home/pi/ffmpeg_3.1.1-1_armhf.deb

    - name: <6/24> Downloading the required dependencies (motion)...
      get_url:
        url: https://github.com/Motion-Project/motion/releases/download/release-4.0.1/pi_jessie_motion_4.0.1-1_armhf.deb  
        dest: /home/pi/pi_jessie_motion_4.0.1-1_armhf.deb

    - name: <7/24> Installing the required dependencies (ffmpeg)...
      command: dpkg -i ffmpeg_3.1.1-1_armhf.deb

    - name: <8/24> Installing the required dependencies (motion dependencies)...
      apt: pkg={{ item }} state=present
      with_items:
        - python-pip
        - python-dev
        - curl
        - libssl-dev
        - libcurl4-openssl-dev
        - libjpeg-dev
        - libx264-142
        - libavcodec56
        - libavformat56
        - libmysqlclient18
        - libswscale3
        - libpq5

    - name: <9/24> Installing motion...
      command: dpkg -i pi_jessie_motion_4.0.1-1_armhf.deb

    - name: <10/24> Installing motioneye...
      command: pip install motioneye
      
    - name: <11/24> Creating motioneye configuration directory...
      file: path=/etc/motioneye state=directory

    - name: <12/24> Copying motioneye default configuration...
      command: cp /usr/local/share/motioneye/extra/motioneye.conf.sample /etc/motioneye/motioneye.conf
      
    # This should be done by Ansible directly replacing parameters in the config files. 
    # Doing it this way for testing purposes first.
    - name: <13/24> Applying provided configuration to motioneye...
      copy: 
        src: "{{ item }}"
        dest: /etc/motioneye
        owner: pi
      with_fileglob:
        - motioneye-config/*
    
    - name: <14/24> Replacing motioneye templates with localized version...
      copy:
        src: "{{ item }}"
        dest: /usr/local/lib/python2.7/dist-packages/motioneye/templates
        owner: pi
      with_fileglob:
        - motioneye-templates/*

    - name: <15/24> Replacing motioneye CSS...
      copy:
        src: "{{ item }}"
        dest: /usr/local/lib/python2.7/dist-packages/motioneye/static/js
        owner: pi
      with_fileglob:
        - motioneye-static/css/*

    - name: <16/24> Replacing motioneye JS...
      copy:
        src: "{{ item }}"
        dest: /usr/local/lib/python2.7/dist-packages/motioneye/static/js
        owner: pi
      with_fileglob:
        - motioneye-static/js/*

    - name: <17/24> Deleting original fonts...
      command: sudo rm -f /usr/local/lib/python2.7/dist-packages/motioneye/static/fnt/mavenpro-*

    - name: <18/24> Adding fonts with Cyrilic support...
      copy:
        src: "{{ item }}"
        dest: /usr/local/lib/python2.7/dist-packages/motioneye/static/fnt
        owner: pi
      with_fileglob:
        - motioneye-static/fnt/*

    - name: <19/24> Creating motioneye data state directory...
      file: path=/var/lib/motioneye state=directory

    - name: <20/24> Adding motioneye service...
      command: cp /usr/local/share/motioneye/extra/motioneye.systemd-unit-local /etc/systemd/system/motioneye.service

    - name: <21/24> Reloading systemd manager configuration...
      command: systemctl daemon-reload
      
    - name: <22/24> Enabling motioneye...
      command: systemctl enable motioneye
      
    - name: <23/24> Starting motioneye...
      command: systemctl start motioneye
      
    - name: <24/24> Install additional utilities...
      apt: pkg={{item}} state=present
      with_items:
        - vim
        - git

    - name: <Rebooting> Playbook complete! Thanks for playing =)
      shell: sleep 2 && shutdown -r now "Ansible reboot triggered"
      async: 1
      poll: 0
      ignore_errors: true
